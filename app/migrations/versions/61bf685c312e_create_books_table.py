"""create books table

Revision ID: 61bf685c312e
Revises: 
Create Date: 2025-08-28 13:31:55.926044

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlmodel.sql import sqltypes

# revision identifiers, used by Alembic.
revision: str = '61bf685c312e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book',
    sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
    sa.Column('title', sqltypes.AutoString(), nullable=False),
    sa.Column('author', sqltypes.AutoString(), nullable=False),
    sa.Column('pages', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    # Regular index on pages
    op.create_index("idx_books_pages", "book", ["pages"])

    # Trigram index on title (requires pg_trgm extension)
    op.execute("CREATE EXTENSION IF NOT EXISTS pg_trgm;")
    op.execute("CREATE INDEX idx_books_title_trgm ON book USING gin (title gin_trgm_ops);")


def downgrade() -> None:
    """Downgrade schema."""
    # Drop indexes first
    op.drop_index("idx_books_pages", table_name="book")
    op.execute("DROP INDEX IF EXISTS idx_books_title_trgm;")

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('book')
    # ### end Alembic commands ###
